name: Build & Test

on:
  pull_request

jobs:
  unit-functional:
    name: ${{ matrix.os }} / ${{ matrix.python }} / unit-functional
    runs-on: ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          os:
            - ubuntu-latest
            - windows-latest
          python:
            - "3.7"
            - "3.8"
            - "3.9"
      steps:
        - uses: actions/setup-python@v4
            with:
              python-version: ${{ matrix.python }}
        - uses: actions/checkout@v3
        - name: Unit Testing
          run: make pr
        - name: Functional Testing
          run: make func-test

  esbuild-integration:
    name: ${{ matrix.os }} / ${{ matrix.python }} / integration-esbuild
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        python:
          - "3.7"
          - "3.8"
          - "3.9"
        node:
          - 14
          - 16
          - 18
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python }}
      - uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node }}
      - run: pytest LAMBDA_BUILDERS_DEV=1 pytest tests/integration/workflow/nodejs_npm_esbuild
#      - uses: actions/setup-go@v3
#        with:
#          go-version: '^1.16'
#      - uses: actions/setup-ruby@v1
#        with:
#          ruby-version: '^3.1'
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'corretto'
#          java-version: '11'
#      - uses: actions/setup-node@v3
#        with:
#          node-version: 14
#      - name: Linux Tests
#        if: matrix.os == 'ubuntu-latest'
#        run: make integ-test
